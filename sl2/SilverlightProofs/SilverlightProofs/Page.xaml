<!-- x:Class loads the "code behind" this XAML definition. -->
<!-- x:Name is the name of the instance by which this canvas may be used in the code behind. -->
<!-- The Page_Loaded method is called after this Canvas has been loaded by firing Loaded event. -->
<!-- xmlns:DefaultSkin loads code from another DLL into the DefaultSkin namespace so it's usable in this XAML file. -->

<Canvas
        xmlns="http://schemas.microsoft.com/client/2007"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        x:Class="SilverlightProofs.Page;assembly=ClientBin/SilverlightProofs.dll"
        x:Name="parentCanvas"
        Loaded="Page_Loaded"        
        Width="640"
        Height="480"
        Background="White"        
        xmlns:DefaultSkin="clr-namespace:DefaultSkin;assembly=ClientBin/DefaultSkin.dll"
        >

  <!-- Add eventhandler from XAML to C# -->
  <Rectangle x:Name="TheRect"
             Width="80"
             Height="97"
             Fill="Blue"
             Stroke="#FF000000"
             Canvas.Left="50"
             Canvas.Top="50"
             MouseEnter="Make_Yellow"
             />

  <!-- Show a rectangle with gradient -->
  <Rectangle Width="149" Height="288" Stroke="#FF000000" Canvas.Left="469" Canvas.Top="67" RenderTransformOrigin="0.5,0.5" RadiusX="0" RadiusY="0" Cursor="None">
    <Rectangle.RenderTransform>
      <TransformGroup>
        <ScaleTransform ScaleX="1" ScaleY="1"/>
        <SkewTransform AngleX="0" AngleY="0"/>
        <RotateTransform Angle="0"/>
        <TranslateTransform X="0" Y="0"/>
      </TransformGroup>
    </Rectangle.RenderTransform>
    <Rectangle.Fill>
      <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5" MappingMode="RelativeToBoundingBox" SpreadMethod="Pad">
        <GradientStop Color="#FFFFFFFF" Offset="0"/>
        <GradientStop Color="#FFF82C2C" Offset="1"/>
      </LinearGradientBrush>
    </Rectangle.Fill>
  </Rectangle>
  <TextBlock Width="84" Height="20" Canvas.Left="498" Canvas.Top="76" Text="Persistence" TextWrapping="Wrap"/>

  <!-- This textblocks holds the Persistent storage value -->
  <TextBlock Width="120" Height="24" Canvas.Left="474" Canvas.Top="211" Text="No value" TextWrapping="Wrap"
		x:Name="TheValue"/>
  
  <!-- These three buttons demonstrate the Persistent storage functionality. -->
  <!-- They also demonstrate the use of custom controls. In this case, a simple button. -->
  <!-- The Click event is exported in DefaultButton in order to fire events to the code behind this XAML definition. -->
  <DefaultSkin:DefaultButton Width="199" Height="99" Canvas.Left="520" Canvas.Top="123" Text="Store key"
                          x:Name="StoreKeyButton" Click= "ClickStoreKeyButton"/>
  <DefaultSkin:DefaultButton Width="199" Height="99" Canvas.Left="520" Canvas.Top="151" Text="Reset store"
                          x:Name="ResetStoreButton" Click= "ClickResetStoreButton"/>
  <DefaultSkin:DefaultButton Width="199" Height="99" Canvas.Left="520" Canvas.Top="179" Text="Get key"
                             x:Name="GetKeyButton" Click= "ClickGetKeyButton"/>

  <!-- This textblocks holds the timercount value -->
  <TextBlock Width="120" Height="24" Canvas.Left="20" Canvas.Top="20" Text="No value" TextWrapping="Wrap"
		x:Name="TheTimerCounter"/>
</Canvas>